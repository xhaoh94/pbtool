package common

import (
	"fmt"
	"io/ioutil"
	"os/exec"
	"strings"
)

var Title string = "// Generated by https://github.com/xhaoh94/pbtool\n// DO NOT EDIT!\n"

func FilePathContent(path string, out *[]string) {
	if string(path[len(path)-1]) != "\\" {
		path += "\\"
	}
	fs, _ := ioutil.ReadDir(path)
	for _, file := range fs {
		if file.IsDir() {
			FilePathContent(path+file.Name()+"\\", out)
		} else {
			if strings.Index(file.Name(), ".") < 0 {
				FilePathContent(path+file.Name()+"\\", out)
				continue
			}
			if strings.Index(file.Name(), "proto") < 0 {
				continue
			}
			f, err := ioutil.ReadFile(path + file.Name())
			if err != nil {
				fmt.Println("read fail", err)
			}
			*out = append(*out, string(f))
		}
	}
}

func Files(path string, out *[]string) {
	if string(path[len(path)-1]) != "\\" {
		path += "\\"
	}
	fs, _ := ioutil.ReadDir(path)
	for _, file := range fs {
		if file.IsDir() {
			Files(path+file.Name()+"\\", out)
		} else {
			if strings.Index(file.Name(), ".") < 0 {
				Files(path+file.Name()+"\\", out)
				continue
			}
			if strings.Index(file.Name(), "proto") < 0 {
				continue
			}
			*out = append(*out, path+file.Name())
		}
	}
}

func RunExe(exeAdress string) (string, bool) {
	cmd := exec.Command("cmd.exe", "/c", "start "+exeAdress)
	d, err := cmd.CombinedOutput()
	if err != nil {
		return string(d), false
	}
	return string(d), true
}
